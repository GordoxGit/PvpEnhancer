# Nom du workflow qui apparaîtra dans l'onglet "Actions" de GitHub
name: PvpEnhancer CI

# Déclencheurs : Le workflow s'exécute sur les push et pull requests vers la branche main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Définition des jobs à exécuter
jobs:
  # Job unique de validation
  validate:
    # L'environnement d'exécution sera la dernière version d'Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code du dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Mettre en place l'environnement Java (JDK)
      # On utilise la version 21, comme spécifié dans votre build.gradle.kts
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Étape 3 : Mettre en place Gradle (sans wrapper)
      # Cette action met en cache les dépendances Gradle pour accélérer les builds futurs
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # Étape 4 : Exécuter la validation avec Gradle
      # La tâche "check" est la tâche de validation standard de Gradle.
      # Elle compile le code, exécute les tests (s'il y en a) et les contrôles de qualité (checkstyle, etc.).
      # Crucialement, elle est conçue pour la VÉRIFICATION et non pour la création d'un artefact.
      # Elle respecte donc parfaitement la demande de ne pas créer de .jar final.
      - name: Run validation checks with Gradle
        run: gradle check --no-daemon
